classdef test_detector < Detector

    properties (SetAccess = protected,Abstract = false)
        Dark_Count_Rate = 1000;
        Dead_Time = 1e-6;
        Histogram_Data_Location = 'MPDHistogram.mat';
        Histogram_Bin_Width=10^-12;
        Detection_Efficiency = 0.6;
        Efficiency_Data_Location = 'MPD_efficiency.mat';
    end

    methods
        function test_detector = test_detector(Wavelength, Repetition_Rate, ...
                                    Time_Gate_Width, Spectral_Filter_Width, ...
                                    jitter)

            temp_detector = MPD_Detector(Wavelength, ...
                                         Repetition_Rate, ...
                                         Time_Gate_Width, ...
                                         Spectral_Filter_Width);

            temp_detector = temp_detector.LoadHistogramData();
            x_arr = linspace(0, numel(det_hist), numel(det_hist)) ...
                        .* bin_width;

            hist_peak = @(hist_arr) hist_arr(hist_arr > (max(hist_arr) / 2) );
            fullWidthHalfMaxima = @(x_axis, hist_arr, peak_arr) ...
                                        x_axis(hist_arr == peak_arr(end)) ...
                                        - x_axis(hist_arr == peak_arr(1));
            
            fwhm = fullWidthHalfMaxima(x_arr, det_hist, ...
                                       hist_peak(det_hist)) / bin_width;

            test_detector = test_detector@Detector(Wavelength, ...
                                                   Repetition_Rate, ...
                                                   Time_Gate_Width, ...
                                                   Spectral_Filter_Width);
            test_detector = test_detector.SetHistogramBinWidth( ...
                                                bin_width / (jitter / fwhm));
        end
    end

end
