classdef parameters < dynamicprops

    properties
    end

    methods
        function obj = parameters()
            obj = aerosol_angstrom(obj);
        end
    end
end

function obj = aerosol_angstrom(obj)
    options = alloptions();
    n_opts = numel(options);
    for i = 1:n_opts
        opt = options{i};
        len = numel(opt);
        name = opt{1};
        args = opt{2};
        obj.addprop(name);
        elem = element(args);
        if len > 2
            elem = elem.addoptions(opt{3});
        end
        obj.(name) = elem;
    end
end

function name = fnname2optname()
    % Get the name of the function that calls fnname2optname() and remove the
    % last delimeted section. i.e. aerosol_angstrom_func becomes
    % aerosol_angstrom
    stack = dbstack(1);
    fnname = stack.name;
    splits = strsplit(fnname, '_');
    name = strjoin(splits(1:end-1), '_');
end

function opt = aerosol_angstrom_func()
    opt = {fnname2optname(), {'alpha', 'beta'}};
end

function opt = aerosol_default_func()
    opt = {fnname2optname(), {'bool'} };
end

function opt = aerosol_file_func()
    opt = {fnname2optname(), {'type', 'file'}, ...
        ['gg', 'ssa', 'tau', 'moments', 'explicit'] };
end

function opt = aerosol_haze_func()
    opt = {fnname2optname(), {'type'}, { ...
        'Rural type aerosols', ...
        'Maritime type aerosols', ...
        'Urban type aerosols', ...
        'Tropospheric type aerosols', ...
        } ...
    };
end

function opt = aerosol_king_byrne_func()
    opt = {fnname2optname(), {'alpha_0', 'alpha_1', 'alpha_2'} };
end

function opt = aerosol_profile_modtran_func()
    opt = {fnname2optname(), {'bool'}}
end

function opt = aerosol_season_func()
    opt = {...
        fnname2optname(), {'season'}, {...
        'Spring-summer profile', ...
        'Fall-winter profile', ...
        }...
    };
end

function opt = aerosol_set_tau_at_wvl_func()
    opt = {fnname2optname(), {'lambda', 'tau'}};
end

function opt = aerosol_species_file_func()
    opt = {fnname2optname(), {'profile'}}
end

function opt = aerosol_species_library_func()
    opt = {...
        fnname2optname(), {'OPAC'}, {...
        'INSO, insoluble', ...
        'WASO, water_soluble', ...
        'SOOT, soot', ...
        'SSAM, sea_salt_accumulation_mode', ...
        'SSCM, sea_salt_coarse_mode', ...
        'MINM, mineral_nucleation_mode', ...
        'MIAM, mineral_accumulation_mode', ...
        'MICM, mineral_coarse_mode', ...
        'MITR, mineral_transported', ...
        'SUSO, sulfate_droplets', ...
        };
    };
end

function opt = aerosol_visibility_func()
    opt = {fnname2optname(), {'value'}};
end

function opt = aerosol_vulcan_func()
    opt = {fnname2optname(), {'value'}, {...
        'Background aerosols', ...
        'Moderate volcanic aerosols', ...
        'High volcanic aerosols', ...
        'Extreme volcanic aerosols', ...
        }...
    };
end

function opt = albedo_func()
    opt = {fnname2optname(), {'value'}};
end

function opt = albedo_file_func()
    opt = {fnname2optname(), {'file'}};
end

function opt = albedo_library_func()
    opt = {fnname2optname(), {'IGBP'}, {...
        'evergreen_needle_forest', ...
        'evergreen_broad_forest', ...
        'deciduous_needle_forest', ...
        'deciduous_broad_forest', ...
        'mixed_forest', ...
        'closed_shrub', ...
        'open_shrubs', ...
        'woody_savanna', ...
        'savanna', ...
        'grassland', ...
        'wetland', ...
        'cropland', ...
        'urban', ...
        'crop_mosaic', ...
        'antarctic_snow', ...
        'desert', ...
        'ocean_water', ...
        'tundra', ...
        'fresh_snow'...
        }...
    };
end

function opt = altitude_func()
    opt = {fnname2optname(), {'start', 'stop'}}; % need rule for start/stop cases
end

function opt = atm_z_grid_func()
    opt = {fnname2optname(), {'level'}};
end

function options = alloptions()
    range = @(Start, Stop) linspace(Start, Stop, Stop);
    options = {...
        aerosol_angstrom_func(), ...
        aerosol_default_func(), ...
        aerosol_file_func(), ... % broken...
        aerosol_haze_func(), ...
        aerosol_king_byrne_func(), ...
        aerosol_profile_modtran_func(), ...
        aerosol_season_func(), ...
        aerosol_set_tau_at_wvl_func(), ...
        aerosol_species_file_func(), ...% this should be list [n]aero
        aerosol_species_library_func(), ...
        aerosol_visibility_func(), ...
        aerosol_vulcan_func(), ...
        albedo_func(), ...
        albedo_file_func(), ...
        albedo_library_func(), ...
        altitude_func(), ...
        atm_z_grid_func(), ...
    };
end


