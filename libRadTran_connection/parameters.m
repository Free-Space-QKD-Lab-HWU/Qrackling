classdef parameters < dynamicprops

    properties
    end

    methods
        function obj = parameters()
            obj = aerosol_angstrom(obj);
        end
    end
end

function obj = aerosol_angstrom(obj)
    options = alloptions();
    n_opts = numel(options);
    for i = 1:n_opts
        opt = options{i};
        len = numel(opt);
        name = opt{1};
        args = opt{2};
        obj.addprop(name);
        elem = element(args);
        if len > 2
            elem = elem.addoptions(opt{3});
        end
        obj.(name) = elem;
    end
end

function options = alloptions()
    range = @(Start, Stop) linspace(Start, Stop, Stop);
    options = {...
        {'aerosol_angstrom', ...
            {'alpha', 'beta'} }, ...
        {'aerosol_default', {'bool'} }, ...
        {'aerosol_file', ...
            {'type', 'file'}, ...
            ['gg', 'ssa', 'tau', 'moments', 'explicit'] }, ... % broken...
        {'aerosol_haze', {'type'}, { ...
            'Rural type aerosols', ...
            'Maritime type aerosols', ...
            'Urban type aerosols', ...
            'Tropospheric type aerosols', ...
            }}, ...
        {'aerosol_king_byrne', ...
            {'alpha_0', 'alpha_1', 'alpha_2'} }, ...
        {'aerosol_profile_modtran', {'bool'}}, ...
        {'aerosol_season', {'season'}, [1, 2]}, ...
        {'aerosol_set_tau_at_wvl', {'lambda', 'tau'}}, ...
        {'aerosol_species_file', {'profile'}}, ...% this should be list [n]aero
        {'aerosol_species_library', {'OPAC'}, {...
            'INSO, insoluble', ...
            'WASO, water_soluble', ...
            'SOOT, soot', ...
            'SSAM, sea_salt_accumulation_mode', ...
            'SSCM, sea_salt_coarse_mode', ...
            'MINM, mineral_nucleation_mode', ...
            'MIAM, mineral_accumulation_mode', ...
            'MICM, mineral_coarse_mode', ...
            'MITR, mineral_transported', ...
            'SUSO, sulfate_droplets', ...
            }}, ...
        {'aerosol_visibility', {'value'}}, ...
        {'aerosol_vulcan', {'value'}, {...
            'Background aerosols', ...
            'Moderate volcanic aerosols', ...
            'High volcanic aerosols', ...
            'Extreme volcanic aerosols', ...
            }}, ...
        {'albedo', {'value'}}, ...
        {'albedo_file', {'file'}}, ...
        {'albedo_library', ...
            {'IGBP'}, {...
            'evergreen_needle_forest', ...
            'evergreen_broad_forest', ...
            'deciduous_needle_forest', ...
            'deciduous_broad_forest', ...
            'mixed_forest', ...
            'closed_shrub', ...
            'open_shrubs', ...
            'woody_savanna', ...
            'savanna', ...
            'grassland', ...
            'wetland', ...
            'cropland', ...
            'urban', ...
            'crop_mosaic', ...
            'antarctic_snow', ...
            'desert', ...
            'ocean_water', ...
            'tundra', ...
            'fresh_snow'...
            }}, ...
        {'altitude', {'start', 'stop'}}, ... % need rule for start/stop cases
    };
end


