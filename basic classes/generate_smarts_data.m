function result_files = generate_smarts_data(SMARTS_object, azimuth, elevation, flags)
    N = numel(flags);
    result_files = cell(1, N);

    idx_start = sum(cumsum(flags) == 0) + 1;
    idx_stop = idx_start + sum(flags) - 1;

    inputs = {SMARTS_object.ispr, ...
              SMARTS_object.iatmos, ...
              SMARTS_object.ih20, ...
              SMARTS_object.i03, ...
              SMARTS_object.igas, ...
              SMARTS_object.ico2, ...
              SMARTS_object.iaeros, ...
              SMARTS_object.iturb, ...
              SMARTS_object.ialbdx, ...
              SMARTS_object.isolar, ...
              SMARTS_object.iprt, ...
              SMARTS_object.icirc, ...
              SMARTS_object.iscan, ...
              SMARTS_object.illum, ...
              SMARTS_object.iuv, ...
              SMARTS_object.imass};

    s = SMARTS_input(comment=SMARTS_object.comment, ...
                     args=inputs, ...
                     executable_path=SMARTS_object.smarts_path, ...
                     stub=SMARTS_object.file_path_stub);

    for i = idx_start : idx_stop
        el = elevation(i);
        az = azimuth(i);

        file_name = num2str(i);
        ialbdx = far_field_albedo(...
                spectral_reflectance = SMARTS_object.ialbdx.spectral_reflectance, ...
                tilt = el, ...
                wazim = az, ...
                ialbdg = SMARTS_object.ialbdx.local_foreground_albedo);

        inputs = {SMARTS_object.ispr, ...
                  SMARTS_object.iatmos, ...
                  SMARTS_object.ih20, ...
                  SMARTS_object.i03, ...
                  SMARTS_object.igas, ...
                  SMARTS_object.ico2, ...
                  SMARTS_object.iaeros, ...
                  SMARTS_object.iturb, ...
                  ialbdx, ...
                  SMARTS_object.isolar, ...
                  SMARTS_object.iprt, ...
                  SMARTS_object.icirc, ...
                  SMARTS_object.iscan, ...
                  SMARTS_object.illum, ...
                  SMARTS_object.iuv, ...
                  SMARTS_object.imass};

        s = SMARTS_input(comment=SMARTS_object.comment, ...
                     args=inputs, ...
                     executable_path=SMARTS_object.smarts_path, ...
                     stub=SMARTS_object.file_path_stub);

        [s, success, destination] = s.run_smarts(file_path=s.file_path_stub, ...
                                             file_name=file_name);

        result_files{i} = strrep(destination, 'inp', 'ext');
        assert(success, 'Something failed...');
    end
    
end
